(()=>{"use strict";var __webpack_modules__={307:()=>{eval("\n;// CONCATENATED MODULE: ./src/pages/components/utils.js\nvar cards = document.querySelector('.elements');\nvar buttonAdd = document.querySelector('.profile__button-add');\nvar buttonEdit = document.querySelector('.profile__button-edit');\nvar closeButtons = document.querySelectorAll('.popup__button-close');\nvar overlays = document.querySelectorAll('.popup__overlay');\nvar profileAvatar = document.querySelector('.profile__avatar');\nvar profileName = document.querySelector('.profile__name');\nvar profileStatus = document.querySelector('.profile__status');\nvar nameInput = document.querySelector('.popup__input_text_name');\nvar statusInput = document.querySelector('.popup__input_text_status');\nvar avatarInput = document.querySelector('.popup__input_text_avatar');\nvar popupAdd = document.querySelector('.popup_add');\nvar popupEdit = document.querySelector('.popup_edit');\nvar titleInput = document.querySelector('.popup__input_text_title');\nvar linkInput = document.querySelector('.popup__input_text_link');\nvar cardTemplate = document.querySelector('#element').content;\nvar popupImage = document.querySelector('.popup__image');\nvar popupPreview = document.querySelector('.popup_preview');\nvar popupPreviewTitle = document.querySelector('.popup__title_preview');\nvar previewContainer = document.querySelector('.popup__container_preview');\nvar previewImageClasses = ['popup__image_orientation_album', 'popup__image_orientation_portrait'];\nvar previewContainerClasses = ['popup__container_preview_album', 'popup__container_preview_portrait'];\nvar popupFormAdd = document.querySelector('.popup__form_add');\nvar popupFormEdit = document.querySelector('.popup__form_edit');\nvar popupFormAvatar = document.querySelector('.popup__form_avatar');\nvar popupFormDelete = document.querySelector('.popup__form_delete');\nvar popupAvatar = document.querySelector('.popup_avatar');\nvar popupDelete = document.querySelector('.popup_delete');\nvar profileAvatarContainer = document.querySelector('.profile__avatar_container');\nvar currentUser = {\n  userId: ''\n};\nvar selectedCard = {\n  id: '',\n  element: null\n};\n;// CONCATENATED MODULE: ./src/pages/components/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-23',\n  headers: {\n    authorization: '5ff8400c-e28b-4222-8091-0c05f7234d51',\n    'Content-Type': 'application/json'\n  }\n};\nvar updateUserInfo = function updateUserInfo(name, status) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: status\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar addLike = function addLike(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: \"PUT\",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar removeLike = function removeLike(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar addCard = function addCard(name, link) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar getUserInfo = function getUserInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar uploadAvatarImage = function uploadAvatarImage(url) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: url\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\nvar deleteCard = function deleteCard(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(id), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  });\n};\n;// CONCATENATED MODULE: ./src/pages/components/card.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\nfunction loadCards(result) {\n  while (cards.firstChild) cards.removeChild(cards.firstChild);\n  result.forEach(function (card) {\n    var fetchedCard = {\n      id: card._id,\n      name: card.name,\n      link: card.link,\n      likes: card.likes.length,\n      myCard: card.owner._id === currentUser.userId\n    };\n    var cardElement = createCard(fetchedCard);\n    cards.prepend(cardElement);\n  });\n}\nfunction createCard(card) {\n  var cardElement = cardTemplate.querySelector('.element').cloneNode(true);\n  var cardImage = cardElement.querySelector('.element__image');\n  var cardTitle = cardElement.querySelector('.element__title');\n  var cardLike = cardElement.querySelector('.element__button-like');\n  var cardTrash = cardElement.querySelector('.element__trash');\n  var cardLikeTitle = cardElement.querySelector('.element__like_title');\n  cardImage.src = card.link;\n  cardImage.alt = 'Картинка, изображающая ' + card.name;\n  cardTitle.textContent = card.name;\n  cardLikeTitle.textContent = card.likes;\n  cardLike.addEventListener('click', function () {\n    var toggled = cardLike.classList.toggle('element__button-like-active');\n    if (toggled) {\n      addLike(card.id).then(function (result) {\n        return cardLikeTitle.textContent = result.likes.length;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      removeLike(card.id).then(function (result) {\n        return cardLikeTitle.textContent = result.likes.length;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  });\n  if (card.myCard) {\n    cardTrash.addEventListener('click', function () {\n      selectedCard.id = card.id;\n      selectedCard.element = cardElement;\n      openPopup(popupDelete);\n    });\n  } else {\n    cardTrash.classList.add('element__trash_hidden');\n  }\n  cardImage.addEventListener('click', function () {\n    getMeta(card.link, function (err, img) {\n      var index = img.naturalWidth > img.naturalHeight ? 0 : 1;\n      addPreviewClasses(index);\n    });\n    openPopup(popupPreview);\n    popupImage.src = card.link;\n    popupImage.alt = \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \".concat(card.name, \" \\u0432 \\u043F\\u0440\\u0435\\u0432\\u044C\\u044E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\");\n    popupPreviewTitle.textContent = card.name;\n  });\n  return cardElement;\n}\nvar getMeta = function getMeta(url, cb) {\n  var img = new Image();\n  img.onload = function () {\n    return cb(null, img);\n  };\n  img.onerror = function (err) {\n    return cb(err);\n  };\n  img.src = url;\n};\nfunction addPreviewClasses(index) {\n  var popupImageArray = Array.from(popupImage.classList);\n  var popupImageMatches = popupImageArray.filter(function (value) {\n    return previewImageClasses.includes(value);\n  });\n  if (popupImageMatches !== null) {\n    var _popupImage$classList;\n    (_popupImage$classList = popupImage.classList).remove.apply(_popupImage$classList, _toConsumableArray(popupImageMatches));\n    popupImage.classList.add(previewImageClasses[index]);\n  } else {\n    popupImage.classList.add(previewImageClasses[index]);\n  }\n  var popupImageContainerArray = Array.from(previewContainer.classList);\n  var popupImageContainerMatches = popupImageContainerArray.filter(function (value) {\n    return previewContainerClasses.includes(value);\n  });\n  if (popupImageContainerMatches !== null) {\n    var _previewContainer$cla;\n    (_previewContainer$cla = previewContainer.classList).remove.apply(_previewContainer$cla, _toConsumableArray(popupImageContainerMatches));\n    previewContainer.classList.add(previewContainerClasses[index]);\n  } else {\n    previewContainer.classList.add(previewContainerClasses[index]);\n  }\n}\n;// CONCATENATED MODULE: ./src/pages/components/modal.js\n\n\n\nfunction openPopup(element) {\n  document.addEventListener('keydown', escapeHandler);\n  element.classList.add('popup_opened');\n}\nvar escapeHandler = function escapeHandler(e) {\n  if (e.key === \"Escape\") {\n    var element = document.querySelector('.popup_opened');\n    closePopup(element);\n  }\n};\nfunction closePopup(element) {\n  element.classList.remove('popup_opened');\n  document.removeEventListener('keydown', escapeHandler);\n}\nfunction handleFormAvatarSubmit(evt) {\n  var submitButton = popupAvatar.querySelector('.popup__button-save');\n  submitButton.textContent = \"Сохранение...\";\n  uploadAvatarImage(avatarInput.value).then(function (res) {\n    return console.log(res.message);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    submitButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupAvatar);\n  });\n}\nfunction handleFormDeleteSubmit() {\n  deleteCard(selectedCard.id).then(function (res) {\n    return console.log(res.message);\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    selectedCard.element.remove();\n    closePopup(popupDelete);\n    selectedCard.id = '';\n    selectedCard.element = null;\n  });\n}\nfunction handleFormEditSubmit(evt) {\n  var submitButton = popupEdit.querySelector('.popup__button-save');\n  profileName.textContent = nameInput.value;\n  profileStatus.textContent = statusInput.value;\n  submitButton.textContent = \"Сохранение...\";\n  updateUserInfo(nameInput.value, statusInput.value).then(function () {\n    return console.log('Данные профиля успешно изменены!');\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    submitButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupEdit);\n  });\n}\nfunction handleFormAddSubmit(evt) {\n  var submitButton = popupAdd.querySelector('.popup__button-save');\n  submitButton.textContent = \"Сохранение...\";\n  addCard(titleInput.value, linkInput.value).then(function (res) {\n    var fetchedCard = {\n      id: res._id,\n      name: res.name,\n      link: res.link,\n      likes: res.likes.length,\n      myCard: res.owner._id === currentUser.userId\n    };\n    var cardElement = createCard(fetchedCard);\n    cards.prepend(cardElement);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    submitButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupAdd);\n  });\n}\n;// CONCATENATED MODULE: ./src/pages/components/validate.js\nvar input;\nvar buttonSelector;\nvar inputTypeError;\nvar inputTypeErrorActive;\nvar showInputError = function showInputError(formElement, inputElement, errorMessage) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(inputTypeError);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(inputTypeErrorActive);\n};\nvar hideInputError = function hideInputError(formElement, inputElement) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  if (inputElement.classList.contains(inputTypeError) || inputElement.classList.contains(inputTypeErrorActive)) {\n    inputElement.classList.remove(inputTypeError);\n    errorElement.classList.remove(inputTypeErrorActive);\n    errorElement.textContent = '';\n  }\n};\nvar checkInputValidity = function checkInputValidity(formElement, inputElement) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage);\n  } else {\n    hideInputError(formElement, inputElement);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement) {\n  var inputList = Array.from(formElement.querySelectorAll(input));\n  var buttonElement = formElement.querySelector(buttonSelector);\n  toggleButtonState(inputList, buttonElement);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(inputList, buttonElement);\n    });\n  });\n};\nvar enableValidation = function enableValidation(_ref) {\n  var formSelector = _ref.formSelector,\n    inputSelector = _ref.inputSelector,\n    submitButtonSelector = _ref.submitButtonSelector,\n    inputErrorClass = _ref.inputErrorClass,\n    errorClass = _ref.errorClass;\n  input = inputSelector;\n  buttonSelector = submitButtonSelector;\n  inputTypeError = inputErrorClass;\n  inputTypeErrorActive = errorClass;\n  var formList = Array.from(document.querySelectorAll(formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement);\n  });\n};\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, buttonElement) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.setAttribute('disabled', '');\n  } else {\n    buttonElement.removeAttribute('disabled');\n  }\n}\n;// CONCATENATED MODULE: ./src/pages/components/index.js\n\n\n\n\n\n\nfunction loadEditValues() {\n  nameInput.value = profileName.textContent;\n  statusInput.value = profileStatus.textContent;\n}\nbuttonAdd.addEventListener('click', function () {\n  var submitButton = popupAdd.querySelector('.popup__button-save');\n  submitButton.setAttribute('disabled', '');\n  openPopup(popupAdd);\n});\nbuttonEdit.addEventListener('click', function () {\n  openPopup(popupEdit);\n  loadEditValues();\n});\nprofileAvatarContainer.addEventListener('click', function () {\n  return openPopup(popupAvatar);\n});\ncloseButtons.forEach(function (button) {\n  var popup = button.closest('.popup');\n  button.addEventListener('click', function () {\n    return closePopup(popup);\n  });\n});\noverlays.forEach(function (overlay) {\n  var popup = overlay.closest('.popup');\n  overlay.addEventListener('click', function () {\n    return closePopup(popup);\n  });\n});\npopupFormAdd.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormAddSubmit(e);\n});\npopupFormEdit.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormEditSubmit(e);\n});\npopupFormAvatar.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormAvatarSubmit(e);\n});\npopupFormDelete.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormDeleteSubmit();\n});\nenableValidation({\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button-save',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input_error_active'\n});\nfunction loadUserInfo(result) {\n  profileAvatar.src = result.avatar;\n  profileName.textContent = result.name;\n  profileStatus.textContent = result.about;\n  currentUser.userId = result._id;\n}\ngetUserInfo().then(function (result) {\n  return loadUserInfo(result);\n}).catch(function (err) {\n  console.log(err);\n});\ngetInitialCards().then(function (result) {\n  return loadCards(result);\n}).catch(function (err) {\n  console.error(err);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y0FBYyxFQUFFO0VBQ2xCMUMsc0JBQXNCLEVBQUU7QUFDNUIsQ0FBQyxDQUFDO0FBRUZ5QixnQkFBZ0IsQ0FBQztFQUNiRSxZQUFZLEVBQUUsY0FBYztFQUM1QkMsYUFBYSxFQUFFLGVBQWU7RUFDOUJDLG9CQUFvQixFQUFFLHFCQUFxQjtFQUMzQ0MsZUFBZSxFQUFFLHlCQUF5QjtFQUMxQ0MsVUFBVSxFQUFFO0FBQ2hCLENBQUMsQ0FBQztBQUVGLFNBQVNZLFlBQVlBLENBQUMvRyxNQUFNLEVBQUU7RUFDMUI5RCxpQkFBaUIsR0FBRzhELE1BQU0sQ0FBQ0wsTUFBTTtFQUNqQ3hELHVCQUF1QixHQUFHNkQsTUFBTSxDQUFDM0IsSUFBSTtFQUNyQ2pDLHlCQUF5QixHQUFHNEQsTUFBTSxDQUFDbkIsS0FBSztFQUN4Q2xCLGtCQUFrQixHQUFHcUMsTUFBTSxDQUFDTSxHQUFHO0FBQ25DO0FBRUFkLFdBQVcsRUFBRSxDQUNSVixJQUFJLENBQUMsVUFBQWtCLE1BQU07RUFBQSxPQUFJK0csWUFBWSxDQUFDL0csTUFBTSxDQUFDO0FBQUEsRUFBQyxDQUNwQzJCLEtBQUssQ0FBQyxVQUFDQyxHQUFHLEVBQUs7RUFDWkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLEdBQUcsQ0FBQztBQUNwQixDQUFDLENBQUM7QUFHTmhDLGVBQWUsRUFBRSxDQUNaZCxJQUFJLENBQUMsVUFBQWtCLE1BQU07RUFBQSxPQUFJRCxTQUFTLENBQUNDLE1BQU0sQ0FBQztBQUFBLEVBQUMsQ0FDakMyQixLQUFLLENBQUMsVUFBQ0MsR0FBRyxFQUFLO0VBQ1pDLE9BQU8sQ0FBQ21GLEtBQUssQ0FBQ3BGLEdBQUcsQ0FBQztBQUN0QixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvdXRpbHMuanM/YWYxOSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvYXBpLmpzPzVkZDkiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9wYWdlcy9jb21wb25lbnRzL2NhcmQuanM/OTdlNSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvbW9kYWwuanM/YjNiNSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvdmFsaWRhdGUuanM/MWRmMSIsIndlYnBhY2s6Ly9tZXN0by1wcm9qZWN0Ly4vc3JjL3BhZ2VzL2NvbXBvbmVudHMvaW5kZXguanM/NzAxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHMnKTtcbmV4cG9ydCBjb25zdCBidXR0b25BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYnV0dG9uLWFkZCcpO1xuZXhwb3J0IGNvbnN0IGJ1dHRvbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYnV0dG9uLWVkaXQnKTtcbmV4cG9ydCBjb25zdCBjbG9zZUJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2J1dHRvbi1jbG9zZScpO1xuZXhwb3J0IGNvbnN0IG92ZXJsYXlzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19vdmVybGF5Jyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZVN0YXR1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19zdGF0dXMnKTtcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3RleHRfbmFtZScpO1xuZXhwb3J0IGNvbnN0IHN0YXR1c0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90ZXh0X3N0YXR1cycpO1xuZXhwb3J0IGNvbnN0IGF2YXRhcklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90ZXh0X2F2YXRhcicpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2FkZCcpO1xuZXhwb3J0IGNvbnN0IHBvcHVwRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9lZGl0Jyk7XG5leHBvcnQgY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdGV4dF90aXRsZScpO1xuZXhwb3J0IGNvbnN0IGxpbmtJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdGV4dF9saW5rJyk7XG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VsZW1lbnQnKS5jb250ZW50O1xuZXhwb3J0IGNvbnN0IHBvcHVwSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG5leHBvcnQgY29uc3QgcG9wdXBQcmV2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3ByZXZpZXcnKTtcbmV4cG9ydCBjb25zdCBwb3B1cFByZXZpZXdUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGl0bGVfcHJldmlldycpO1xuZXhwb3J0IGNvbnN0IHByZXZpZXdDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NvbnRhaW5lcl9wcmV2aWV3Jyk7XG5leHBvcnQgY29uc3QgcHJldmlld0ltYWdlQ2xhc3NlcyA9IFsncG9wdXBfX2ltYWdlX29yaWVudGF0aW9uX2FsYnVtJywgJ3BvcHVwX19pbWFnZV9vcmllbnRhdGlvbl9wb3J0cmFpdCddO1xuZXhwb3J0IGNvbnN0IHByZXZpZXdDb250YWluZXJDbGFzc2VzID0gWydwb3B1cF9fY29udGFpbmVyX3ByZXZpZXdfYWxidW0nLCAncG9wdXBfX2NvbnRhaW5lcl9wcmV2aWV3X3BvcnRyYWl0J107XG5leHBvcnQgY29uc3QgcG9wdXBGb3JtQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX2FkZCcpO1xuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybUVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1fZWRpdCcpO1xuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9hdmF0YXInKTtcbmV4cG9ydCBjb25zdCBwb3B1cEZvcm1EZWxldGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1fZGVsZXRlJyk7XG5leHBvcnQgY29uc3QgcG9wdXBBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfYXZhdGFyJyk7XG5leHBvcnQgY29uc3QgcG9wdXBEZWxldGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfZGVsZXRlJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhckNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXJfY29udGFpbmVyJyk7XG5cbmV4cG9ydCBsZXQgY3VycmVudFVzZXIgPSB7XG4gICAgdXNlcklkOiAnJ1xufTtcblxuZXhwb3J0IGxldCBzZWxlY3RlZENhcmQgPSB7XG4gICAgaWQ6ICcnLFxuICAgIGVsZW1lbnQ6IG51bGxcbn1cblxuIiwiY29uc3QgY29uZmlnID0ge1xuICAgIGJhc2VVcmw6ICdodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvcGx1cy1jb2hvcnQtMjMnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogJzVmZjg0MDBjLWUyOGItNDIyMi04MDkxLTBjMDVmNzIzNGQ1MScsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVVc2VySW5mbyA9IChuYW1lLCBzdGF0dXMpID0+IHtcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgYWJvdXQ6IHN0YXR1c1xuICAgICAgICB9KVxuICAgIH0pXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgIH0pO1xuXG59XG5cbmV4cG9ydCBjb25zdCBhZGRMaWtlID0gKGlkKSA9PiB7XG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2lkfWAsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVyc1xuICAgIH0pXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlbW92ZUxpa2UgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXG4gICAgfSlcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICAgIH0pO1xufVxuXG5leHBvcnQgY29uc3QgYWRkQ2FyZCA9IChuYW1lLCBsaW5rKSA9PiB7XG4gICAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBsaW5rOiBsaW5rXG4gICAgICAgIH0pXG4gICAgfSlcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VySW5mbyA9ICgpID0+IHtcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXG4gICAgfSlcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCB1cGxvYWRBdmF0YXJJbWFnZSA9ICh1cmwpID0+IHtcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBhdmF0YXI6IHVybFxuICAgICAgICB9KVxuICAgIH0pXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9KVxufVxuXG5leHBvcnQgY29uc3QgZ2V0SW5pdGlhbENhcmRzID0gKCkgPT4ge1xuICAgIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnNcbiAgICB9KVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUNhcmQgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzXG5cbiAgICB9KVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfSlcbn0iLCJpbXBvcnQge29wZW5Qb3B1cH0gZnJvbSBcIi4vbW9kYWxcIjtcbmltcG9ydCB7XG4gICAgY2FyZHMsXG4gICAgY2FyZFRlbXBsYXRlLCBjdXJyZW50VXNlciwgcG9wdXBEZWxldGUsXG4gICAgcG9wdXBJbWFnZSxcbiAgICBwb3B1cFByZXZpZXcsXG4gICAgcG9wdXBQcmV2aWV3VGl0bGUsXG4gICAgcHJldmlld0NvbnRhaW5lcixcbiAgICBwcmV2aWV3Q29udGFpbmVyQ2xhc3NlcyxcbiAgICBwcmV2aWV3SW1hZ2VDbGFzc2VzLCBzZWxlY3RlZENhcmRcbn0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7YWRkTGlrZSwgcmVtb3ZlTGlrZX0gZnJvbSBcIi4vYXBpXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkQ2FyZHMocmVzdWx0KSB7XG4gICAgd2hpbGUgKGNhcmRzLmZpcnN0Q2hpbGQpIGNhcmRzLnJlbW92ZUNoaWxkKGNhcmRzLmZpcnN0Q2hpbGQpO1xuICAgIHJlc3VsdC5mb3JFYWNoKGNhcmQgPT4ge1xuICAgICAgICBjb25zdCBmZXRjaGVkQ2FyZCA9IHtcbiAgICAgICAgICAgIGlkOiBjYXJkLl9pZCxcbiAgICAgICAgICAgIG5hbWU6IGNhcmQubmFtZSxcbiAgICAgICAgICAgIGxpbms6IGNhcmQubGluayxcbiAgICAgICAgICAgIGxpa2VzOiBjYXJkLmxpa2VzLmxlbmd0aCxcbiAgICAgICAgICAgIG15Q2FyZDogY2FyZC5vd25lci5faWQgPT09IGN1cnJlbnRVc2VyLnVzZXJJZFxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChmZXRjaGVkQ2FyZCk7XG4gICAgICAgIGNhcmRzLnByZXBlbmQoY2FyZEVsZW1lbnQpO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkVGVtcGxhdGUucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgY29uc3QgY2FyZEltYWdlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJyk7XG4gICAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJyk7XG4gICAgY29uc3QgY2FyZExpa2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fYnV0dG9uLWxpa2UnKTtcbiAgICBjb25zdCBjYXJkVHJhc2ggPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdHJhc2gnKTtcbiAgICBjb25zdCBjYXJkTGlrZVRpdGxlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2VfdGl0bGUnKTtcbiAgICBjYXJkSW1hZ2Uuc3JjID0gY2FyZC5saW5rO1xuICAgIGNhcmRJbWFnZS5hbHQgPSAn0JrQsNGA0YLQuNC90LrQsCwg0LjQt9C+0LHRgNCw0LbQsNGO0YnQsNGPICcgKyBjYXJkLm5hbWU7XG4gICAgY2FyZFRpdGxlLnRleHRDb250ZW50ID0gY2FyZC5uYW1lO1xuICAgIGNhcmRMaWtlVGl0bGUudGV4dENvbnRlbnQgPSBjYXJkLmxpa2VzO1xuICAgIGNhcmRMaWtlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBjb25zdCB0b2dnbGVkID0gY2FyZExpa2UuY2xhc3NMaXN0LnRvZ2dsZSgnZWxlbWVudF9fYnV0dG9uLWxpa2UtYWN0aXZlJyk7XG4gICAgICAgIGlmICh0b2dnbGVkKSB7XG4gICAgICAgICAgICBhZGRMaWtlKGNhcmQuaWQpXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzdWx0ID0+IGNhcmRMaWtlVGl0bGUudGV4dENvbnRlbnQgPSByZXN1bHQubGlrZXMubGVuZ3RoKVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZW1vdmVMaWtlKGNhcmQuaWQpXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzdWx0ID0+IGNhcmRMaWtlVGl0bGUudGV4dENvbnRlbnQgPSByZXN1bHQubGlrZXMubGVuZ3RoKVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoY2FyZC5teUNhcmQpIHtcbiAgICAgICAgY2FyZFRyYXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgc2VsZWN0ZWRDYXJkLmlkID0gY2FyZC5pZDtcbiAgICAgICAgICAgIHNlbGVjdGVkQ2FyZC5lbGVtZW50ID0gY2FyZEVsZW1lbnQ7XG4gICAgICAgICAgICBvcGVuUG9wdXAocG9wdXBEZWxldGUpO1xuICAgICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcmRUcmFzaC5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X190cmFzaF9oaWRkZW4nKVxuICAgIH1cblxuICAgIGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgZ2V0TWV0YShjYXJkLmxpbmssIChlcnIsIGltZykgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBpbWcubmF0dXJhbFdpZHRoID4gaW1nLm5hdHVyYWxIZWlnaHQgPyAwIDogMTtcblxuICAgICAgICAgICAgYWRkUHJldmlld0NsYXNzZXMoaW5kZXgpO1xuXG4gICAgICAgIH0pO1xuICAgICAgICBvcGVuUG9wdXAocG9wdXBQcmV2aWV3KTtcbiAgICAgICAgcG9wdXBJbWFnZS5zcmMgPSBjYXJkLmxpbms7XG4gICAgICAgIHBvcHVwSW1hZ2UuYWx0ID0gYNCY0LfQvtCx0YDQsNC20LXQvdC40LUgJHtjYXJkLm5hbWV9INCyINC/0YDQtdCy0YzRjiDRjdC70LXQvNC10L3RgtCwYFxuICAgICAgICBwb3B1cFByZXZpZXdUaXRsZS50ZXh0Q29udGVudCA9IGNhcmQubmFtZTtcbiAgICB9KTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5cblxuY29uc3QgZ2V0TWV0YSA9ICh1cmwsIGNiKSA9PiB7XG4gICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgaW1nLm9ubG9hZCA9ICgpID0+IGNiKG51bGwsIGltZyk7XG4gICAgaW1nLm9uZXJyb3IgPSAoZXJyKSA9PiBjYihlcnIpO1xuICAgIGltZy5zcmMgPSB1cmw7XG59O1xuXG5mdW5jdGlvbiBhZGRQcmV2aWV3Q2xhc3NlcyhpbmRleCkge1xuICAgIGNvbnN0IHBvcHVwSW1hZ2VBcnJheSA9IEFycmF5LmZyb20ocG9wdXBJbWFnZS5jbGFzc0xpc3QpO1xuICAgIGNvbnN0IHBvcHVwSW1hZ2VNYXRjaGVzID0gcG9wdXBJbWFnZUFycmF5LmZpbHRlcih2YWx1ZSA9PiBwcmV2aWV3SW1hZ2VDbGFzc2VzLmluY2x1ZGVzKHZhbHVlKSk7XG4gICAgaWYgKHBvcHVwSW1hZ2VNYXRjaGVzICE9PSBudWxsKSB7XG4gICAgICAgIHBvcHVwSW1hZ2UuY2xhc3NMaXN0LnJlbW92ZSguLi5wb3B1cEltYWdlTWF0Y2hlcyk7XG4gICAgICAgIHBvcHVwSW1hZ2UuY2xhc3NMaXN0LmFkZChwcmV2aWV3SW1hZ2VDbGFzc2VzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcG9wdXBJbWFnZS5jbGFzc0xpc3QuYWRkKHByZXZpZXdJbWFnZUNsYXNzZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBjb25zdCBwb3B1cEltYWdlQ29udGFpbmVyQXJyYXkgPSBBcnJheS5mcm9tKHByZXZpZXdDb250YWluZXIuY2xhc3NMaXN0KTtcbiAgICBjb25zdCBwb3B1cEltYWdlQ29udGFpbmVyTWF0Y2hlcyA9IHBvcHVwSW1hZ2VDb250YWluZXJBcnJheS5maWx0ZXIodmFsdWUgPT4gcHJldmlld0NvbnRhaW5lckNsYXNzZXMuaW5jbHVkZXModmFsdWUpKTtcbiAgICBpZiAocG9wdXBJbWFnZUNvbnRhaW5lck1hdGNoZXMgIT09IG51bGwpIHtcbiAgICAgICAgcHJldmlld0NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKC4uLnBvcHVwSW1hZ2VDb250YWluZXJNYXRjaGVzKTtcbiAgICAgICAgcHJldmlld0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZXZpZXdDb250YWluZXJDbGFzc2VzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJldmlld0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZXZpZXdDb250YWluZXJDbGFzc2VzW2luZGV4XSk7XG4gICAgfVxuXG59IiwiaW1wb3J0IHtjcmVhdGVDYXJkfSBmcm9tIFwiLi9jYXJkXCI7XG5pbXBvcnQge1xuICAgIGF2YXRhcklucHV0LFxuICAgIGNhcmRzLCBjdXJyZW50VXNlcixcbiAgICBsaW5rSW5wdXQsXG4gICAgbmFtZUlucHV0LFxuICAgIHBvcHVwQWRkLCBwb3B1cEF2YXRhciwgcG9wdXBEZWxldGUsXG4gICAgcG9wdXBFZGl0LFxuICAgIHByb2ZpbGVOYW1lLFxuICAgIHByb2ZpbGVTdGF0dXMsIHNlbGVjdGVkQ2FyZCxcbiAgICBzdGF0dXNJbnB1dCxcbiAgICB0aXRsZUlucHV0XG59IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQge2FkZENhcmQsIGRlbGV0ZUNhcmQsIHVwZGF0ZVVzZXJJbmZvLCB1cGxvYWRBdmF0YXJJbWFnZX0gZnJvbSBcIi4vYXBpXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuUG9wdXAoZWxlbWVudCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlc2NhcGVIYW5kbGVyKVxuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG59XG5cbmNvbnN0IGVzY2FwZUhhbmRsZXIgPSAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX29wZW5lZCcpO1xuICAgICAgICBjbG9zZVBvcHVwKGVsZW1lbnQpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlUG9wdXAoZWxlbWVudCkge1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGVzY2FwZUhhbmRsZXIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRm9ybUF2YXRhclN1Ym1pdChldnQpIHtcbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBwb3B1cEF2YXRhci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbi1zYXZlJyk7XG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiO1xuICAgIHVwbG9hZEF2YXRhckltYWdlKGF2YXRhcklucHV0LnZhbHVlKVxuICAgICAgICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzLm1lc3NhZ2UpKVxuICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCLQodC+0YXRgNCw0L3QuNGC0YxcIjtcbiAgICAgICAgICAgIGV2dC50YXJnZXQucmVzZXQoKTtcbiAgICAgICAgICAgIGNsb3NlUG9wdXAocG9wdXBBdmF0YXIpO1xuICAgICAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRm9ybURlbGV0ZVN1Ym1pdCgpIHtcbiAgICBkZWxldGVDYXJkKHNlbGVjdGVkQ2FyZC5pZClcbiAgICAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcy5tZXNzYWdlKSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIHNlbGVjdGVkQ2FyZC5lbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICAgICAgY2xvc2VQb3B1cChwb3B1cERlbGV0ZSk7XG4gICAgICAgICAgICBzZWxlY3RlZENhcmQuaWQgPSAnJztcbiAgICAgICAgICAgIHNlbGVjdGVkQ2FyZC5lbGVtZW50ID0gbnVsbDtcbiAgICAgICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUZvcm1FZGl0U3VibWl0KGV2dCkge1xuICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IHBvcHVwRWRpdC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbi1zYXZlJyk7XG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBuYW1lSW5wdXQudmFsdWU7XG4gICAgcHJvZmlsZVN0YXR1cy50ZXh0Q29udGVudCA9IHN0YXR1c0lucHV0LnZhbHVlO1xuICAgIHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIjtcbiAgICB1cGRhdGVVc2VySW5mbyhuYW1lSW5wdXQudmFsdWUsIHN0YXR1c0lucHV0LnZhbHVlKVxuICAgICAgICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygn0JTQsNC90L3Ri9C1INC/0YDQvtGE0LjQu9GPINGD0YHQv9C10YjQvdC+INC40LfQvNC10L3QtdC90YshJykpXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcItCh0L7RhdGA0LDQvdC40YLRjFwiO1xuICAgICAgICAgICAgZXZ0LnRhcmdldC5yZXNldCgpO1xuICAgICAgICAgICAgY2xvc2VQb3B1cChwb3B1cEVkaXQpO1xuICAgICAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRm9ybUFkZFN1Ym1pdChldnQpIHtcbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBwb3B1cEFkZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbi1zYXZlJyk7XG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiO1xuICAgIGFkZENhcmQodGl0bGVJbnB1dC52YWx1ZSwgbGlua0lucHV0LnZhbHVlKVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgY29uc3QgZmV0Y2hlZENhcmQgPSB7XG4gICAgICAgICAgICAgICAgaWQ6IHJlcy5faWQsXG4gICAgICAgICAgICAgICAgbmFtZTogcmVzLm5hbWUsXG4gICAgICAgICAgICAgICAgbGluazogcmVzLmxpbmssXG4gICAgICAgICAgICAgICAgbGlrZXM6IHJlcy5saWtlcy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgbXlDYXJkOiByZXMub3duZXIuX2lkID09PSBjdXJyZW50VXNlci51c2VySWRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChmZXRjaGVkQ2FyZCk7XG4gICAgICAgICAgICBjYXJkcy5wcmVwZW5kKGNhcmRFbGVtZW50KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LjRgtGMXCI7XG4gICAgICAgICAgICBldnQudGFyZ2V0LnJlc2V0KCk7XG4gICAgICAgICAgICBjbG9zZVBvcHVwKHBvcHVwQWRkKTtcbiAgICAgICAgfSk7XG59IiwibGV0IGlucHV0O1xubGV0IGJ1dHRvblNlbGVjdG9yO1xubGV0IGlucHV0VHlwZUVycm9yO1xubGV0IGlucHV0VHlwZUVycm9yQWN0aXZlO1xuXG5jb25zdCBzaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoaW5wdXRUeXBlRXJyb3IpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZChpbnB1dFR5cGVFcnJvckFjdGl2ZSk7XG59O1xuXG5leHBvcnQgY29uc3QgaGlkZUlucHV0RXJyb3IgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpZiAoaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhpbnB1dFR5cGVFcnJvcikgfHwgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhpbnB1dFR5cGVFcnJvckFjdGl2ZSkpIHtcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoaW5wdXRUeXBlRXJyb3IpO1xuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShpbnB1dFR5cGVFcnJvckFjdGl2ZSk7XG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xuICAgIH1cbn07XG5cbmNvbnN0IGNoZWNrSW5wdXRWYWxpZGl0eSA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaWYgKGlucHV0RWxlbWVudC52YWxpZGl0eS5wYXR0ZXJuTWlzbWF0Y2gpIHtcbiAgICAgICAgaW5wdXRFbGVtZW50LnNldEN1c3RvbVZhbGlkaXR5KGlucHV0RWxlbWVudC5kYXRhc2V0LmVycm9yTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW5wdXRFbGVtZW50LnNldEN1c3RvbVZhbGlkaXR5KFwiXCIpO1xuICAgIH1cblxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICAgIHNob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaGlkZUlucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCk7XG4gICAgfVxufTtcblxuY29uc3Qgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoaW5wdXQpKTtcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihidXR0b25TZWxlY3Rvcik7XG4gICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KTtcbiAgICAgICAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1TZWxlY3RvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dFNlbGVjdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0RXJyb3JDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvckNsYXNzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSA9PiB7XG4gICAgaW5wdXQgPSBpbnB1dFNlbGVjdG9yO1xuICAgIGJ1dHRvblNlbGVjdG9yID0gc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgaW5wdXRUeXBlRXJyb3IgPSBpbnB1dEVycm9yQ2xhc3M7XG4gICAgaW5wdXRUeXBlRXJyb3JBY3RpdmUgPSBlcnJvckNsYXNzO1xuXG4gICAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZm9ybVNlbGVjdG9yKSk7XG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICAgICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQpO1xuICAgIH0pO1xufTtcblxuXG5mdW5jdGlvbiBoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCkge1xuICAgIGlmIChoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgICBidXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfVxufSIsImltcG9ydCAnLi4vaW5kZXguY3NzJztcbmltcG9ydCB7XG4gICAgY2xvc2VQb3B1cCxcbiAgICBoYW5kbGVGb3JtQWRkU3VibWl0LFxuICAgIGhhbmRsZUZvcm1BdmF0YXJTdWJtaXQsXG4gICAgaGFuZGxlRm9ybURlbGV0ZVN1Ym1pdCxcbiAgICBoYW5kbGVGb3JtRWRpdFN1Ym1pdCxcbiAgICBvcGVuUG9wdXBcbn0gZnJvbSBcIi4vbW9kYWxcIjtcbmltcG9ydCB7bG9hZENhcmRzfSBmcm9tIFwiLi9jYXJkXCI7XG5pbXBvcnQge2VuYWJsZVZhbGlkYXRpb259IGZyb20gXCIuL3ZhbGlkYXRlXCI7XG5cbmltcG9ydCB7XG4gICAgYnV0dG9uQWRkLFxuICAgIGJ1dHRvbkVkaXQsXG4gICAgY2xvc2VCdXR0b25zLCBjdXJyZW50VXNlcixcbiAgICBuYW1lSW5wdXQsIG92ZXJsYXlzLFxuICAgIHBvcHVwQWRkLCBwb3B1cEF2YXRhcixcbiAgICBwb3B1cEVkaXQsIHBvcHVwRm9ybUFkZCwgcG9wdXBGb3JtQXZhdGFyLCBwb3B1cEZvcm1EZWxldGUsIHBvcHVwRm9ybUVkaXQsIHByb2ZpbGVBdmF0YXIsIHByb2ZpbGVBdmF0YXJDb250YWluZXIsXG4gICAgcHJvZmlsZU5hbWUsXG4gICAgcHJvZmlsZVN0YXR1cyxcbiAgICBzdGF0dXNJbnB1dFxufSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHtnZXRJbml0aWFsQ2FyZHMsIGdldFVzZXJJbmZvfSBmcm9tIFwiLi9hcGlcIjtcblxuXG5mdW5jdGlvbiBsb2FkRWRpdFZhbHVlcygpIHtcbiAgICBuYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlTmFtZS50ZXh0Q29udGVudDtcbiAgICBzdGF0dXNJbnB1dC52YWx1ZSA9IHByb2ZpbGVTdGF0dXMudGV4dENvbnRlbnQ7XG59XG5cbmJ1dHRvbkFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBwb3B1cEFkZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbi1zYXZlJyk7XG4gICAgc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnJyk7XG4gICAgb3BlblBvcHVwKHBvcHVwQWRkKVxufSk7XG5idXR0b25FZGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIG9wZW5Qb3B1cChwb3B1cEVkaXQpO1xuICAgIGxvYWRFZGl0VmFsdWVzKCk7XG59KTtcblxucHJvZmlsZUF2YXRhckNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9wZW5Qb3B1cChwb3B1cEF2YXRhcikpO1xuXG5jbG9zZUJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgIGNvbnN0IHBvcHVwID0gYnV0dG9uLmNsb3Nlc3QoJy5wb3B1cCcpO1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGNsb3NlUG9wdXAocG9wdXApKTtcbn0pO1xuXG5vdmVybGF5cy5mb3JFYWNoKG92ZXJsYXkgPT4ge1xuICAgIGNvbnN0IHBvcHVwID0gb3ZlcmxheS5jbG9zZXN0KCcucG9wdXAnKTtcbiAgICBvdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gY2xvc2VQb3B1cChwb3B1cCkpO1xufSk7XG5cbnBvcHVwRm9ybUFkZC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBoYW5kbGVGb3JtQWRkU3VibWl0KGUpO1xufSk7XG5cbnBvcHVwRm9ybUVkaXQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24gKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaGFuZGxlRm9ybUVkaXRTdWJtaXQoZSk7XG59KVxuXG5wb3B1cEZvcm1BdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24gKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaGFuZGxlRm9ybUF2YXRhclN1Ym1pdChlKTtcbn0pXG5cbnBvcHVwRm9ybURlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBoYW5kbGVGb3JtRGVsZXRlU3VibWl0KCk7XG59KVxuXG5lbmFibGVWYWxpZGF0aW9uKHtcbiAgICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxuICAgIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fYnV0dG9uLXNhdmUnLFxuICAgIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcbiAgICBlcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X2Vycm9yX2FjdGl2ZSdcbn0pO1xuXG5mdW5jdGlvbiBsb2FkVXNlckluZm8ocmVzdWx0KSB7XG4gICAgcHJvZmlsZUF2YXRhci5zcmMgPSByZXN1bHQuYXZhdGFyO1xuICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gcmVzdWx0Lm5hbWU7XG4gICAgcHJvZmlsZVN0YXR1cy50ZXh0Q29udGVudCA9IHJlc3VsdC5hYm91dDtcbiAgICBjdXJyZW50VXNlci51c2VySWQgPSByZXN1bHQuX2lkO1xufVxuXG5nZXRVc2VySW5mbygpXG4gICAgLnRoZW4ocmVzdWx0ID0+IGxvYWRVc2VySW5mbyhyZXN1bHQpKVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSk7XG5cblxuZ2V0SW5pdGlhbENhcmRzKClcbiAgICAudGhlbihyZXN1bHQgPT4gbG9hZENhcmRzKHJlc3VsdCkpXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0pO1xuXG5cblxuIl0sIm5hbWVzIjpbImNhcmRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYnV0dG9uQWRkIiwiYnV0dG9uRWRpdCIsImNsb3NlQnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJvdmVybGF5cyIsInByb2ZpbGVBdmF0YXIiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVTdGF0dXMiLCJuYW1lSW5wdXQiLCJzdGF0dXNJbnB1dCIsImF2YXRhcklucHV0IiwicG9wdXBBZGQiLCJwb3B1cEVkaXQiLCJ0aXRsZUlucHV0IiwibGlua0lucHV0IiwiY2FyZFRlbXBsYXRlIiwiY29udGVudCIsInBvcHVwSW1hZ2UiLCJwb3B1cFByZXZpZXciLCJwb3B1cFByZXZpZXdUaXRsZSIsInByZXZpZXdDb250YWluZXIiLCJwcmV2aWV3SW1hZ2VDbGFzc2VzIiwicHJldmlld0NvbnRhaW5lckNsYXNzZXMiLCJwb3B1cEZvcm1BZGQiLCJwb3B1cEZvcm1FZGl0IiwicG9wdXBGb3JtQXZhdGFyIiwicG9wdXBGb3JtRGVsZXRlIiwicG9wdXBBdmF0YXIiLCJwb3B1cERlbGV0ZSIsInByb2ZpbGVBdmF0YXJDb250YWluZXIiLCJjdXJyZW50VXNlciIsInVzZXJJZCIsInNlbGVjdGVkQ2FyZCIsImlkIiwiZWxlbWVudCIsImNvbmZpZyIsImJhc2VVcmwiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInVwZGF0ZVVzZXJJbmZvIiwibmFtZSIsInN0YXR1cyIsImZldGNoIiwiY29uY2F0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhYm91dCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiYWRkTGlrZSIsInJlbW92ZUxpa2UiLCJhZGRDYXJkIiwibGluayIsImdldFVzZXJJbmZvIiwidXBsb2FkQXZhdGFySW1hZ2UiLCJ1cmwiLCJhdmF0YXIiLCJnZXRJbml0aWFsQ2FyZHMiLCJkZWxldGVDYXJkIiwib3BlblBvcHVwIiwibG9hZENhcmRzIiwicmVzdWx0IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiZm9yRWFjaCIsImNhcmQiLCJmZXRjaGVkQ2FyZCIsIl9pZCIsImxpa2VzIiwibGVuZ3RoIiwibXlDYXJkIiwib3duZXIiLCJjYXJkRWxlbWVudCIsImNyZWF0ZUNhcmQiLCJwcmVwZW5kIiwiY2xvbmVOb2RlIiwiY2FyZEltYWdlIiwiY2FyZFRpdGxlIiwiY2FyZExpa2UiLCJjYXJkVHJhc2giLCJjYXJkTGlrZVRpdGxlIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwidG9nZ2xlZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFkZCIsImdldE1ldGEiLCJpbWciLCJpbmRleCIsIm5hdHVyYWxXaWR0aCIsIm5hdHVyYWxIZWlnaHQiLCJhZGRQcmV2aWV3Q2xhc3NlcyIsImNiIiwiSW1hZ2UiLCJvbmxvYWQiLCJvbmVycm9yIiwicG9wdXBJbWFnZUFycmF5IiwiQXJyYXkiLCJmcm9tIiwicG9wdXBJbWFnZU1hdGNoZXMiLCJmaWx0ZXIiLCJ2YWx1ZSIsImluY2x1ZGVzIiwiX3BvcHVwSW1hZ2UkY2xhc3NMaXN0IiwicmVtb3ZlIiwiYXBwbHkiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJwb3B1cEltYWdlQ29udGFpbmVyQXJyYXkiLCJwb3B1cEltYWdlQ29udGFpbmVyTWF0Y2hlcyIsIl9wcmV2aWV3Q29udGFpbmVyJGNsYSIsImVzY2FwZUhhbmRsZXIiLCJlIiwia2V5IiwiY2xvc2VQb3B1cCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJoYW5kbGVGb3JtQXZhdGFyU3VibWl0IiwiZXZ0Iiwic3VibWl0QnV0dG9uIiwibWVzc2FnZSIsImZpbmFsbHkiLCJ0YXJnZXQiLCJyZXNldCIsImhhbmRsZUZvcm1EZWxldGVTdWJtaXQiLCJoYW5kbGVGb3JtRWRpdFN1Ym1pdCIsImhhbmRsZUZvcm1BZGRTdWJtaXQiLCJpbnB1dCIsImJ1dHRvblNlbGVjdG9yIiwiaW5wdXRUeXBlRXJyb3IiLCJpbnB1dFR5cGVFcnJvckFjdGl2ZSIsInNob3dJbnB1dEVycm9yIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJoaWRlSW5wdXRFcnJvciIsImNvbnRhaW5zIiwiY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJwYXR0ZXJuTWlzbWF0Y2giLCJzZXRDdXN0b21WYWxpZGl0eSIsImRhdGFzZXQiLCJ2YWxpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJpbnB1dExpc3QiLCJidXR0b25FbGVtZW50IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJlbmFibGVWYWxpZGF0aW9uIiwiX3JlZiIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJmb3JtTGlzdCIsImhhc0ludmFsaWRJbnB1dCIsInNvbWUiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJsb2FkRWRpdFZhbHVlcyIsImJ1dHRvbiIsInBvcHVwIiwiY2xvc2VzdCIsIm92ZXJsYXkiLCJwcmV2ZW50RGVmYXVsdCIsImxvYWRVc2VySW5mbyIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///307\n")}},__webpack_exports__={};__webpack_modules__[307]()})();