(()=>{"use strict";var __webpack_modules__={307:()=>{eval("\n;// CONCATENATED MODULE: ./src/pages/components/modal.js\nfunction openPopup(element) {\n  document.addEventListener('keydown', escapeHandler);\n  element.classList.add('popup_opened');\n}\nvar escapeHandler = function escapeHandler(e) {\n  if (e.key === \"Escape\") {\n    var element = document.querySelector('.popup_opened');\n    closePopup(element);\n  }\n};\nfunction closePopup(element) {\n  element.classList.remove('popup_opened');\n  document.removeEventListener('keydown', escapeHandler);\n}\n;// CONCATENATED MODULE: ./src/pages/components/utils.js\nvar cards = document.querySelector('.elements');\nvar buttonAdd = document.querySelector('.profile__button-add');\nvar buttonEdit = document.querySelector('.profile__button-edit');\nvar closeButtons = document.querySelectorAll('.popup__button-close');\nvar overlays = document.querySelectorAll('.popup__overlay');\nvar profileAvatar = document.querySelector('.profile__avatar');\nvar profileName = document.querySelector('.profile__name');\nvar profileStatus = document.querySelector('.profile__status');\nvar nameInput = document.querySelector('.popup__input_text_name');\nvar statusInput = document.querySelector('.popup__input_text_status');\nvar avatarInput = document.querySelector('.popup__input_text_avatar');\nvar popupAdd = document.querySelector('.popup_add');\nvar popupEdit = document.querySelector('.popup_edit');\nvar titleInput = document.querySelector('.popup__input_text_title');\nvar linkInput = document.querySelector('.popup__input_text_link');\nvar cardTemplate = document.querySelector('#element').content;\nvar popupImage = document.querySelector('.popup__image');\nvar popupPreview = document.querySelector('.popup_preview');\nvar popupPreviewTitle = document.querySelector('.popup__title_preview');\nvar popupFormAdd = document.querySelector('.popup__form_add');\nvar popupFormEdit = document.querySelector('.popup__form_edit');\nvar popupFormAvatar = document.querySelector('.popup__form_avatar');\nvar popupFormDelete = document.querySelector('.popup__form_delete');\nvar popupAvatar = document.querySelector('.popup_avatar');\nvar popupDelete = document.querySelector('.popup_delete');\nvar profileAvatarContainer = document.querySelector('.profile__avatar_container');\nvar submitAvatarButton = popupAvatar.querySelector('.popup__button-save');\nvar submitAddButton = popupAdd.querySelector('.popup__button-save');\nvar submitEditButton = popupEdit.querySelector('.popup__button-save');\nvar currentUser = {\n  userId: ''\n};\nvar selectedCard = {};\nvar selectedElement = {};\n;// CONCATENATED MODULE: ./src/pages/components/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-23',\n  headers: {\n    authorization: '5ff8400c-e28b-4222-8091-0c05f7234d51',\n    'Content-Type': 'application/json'\n  }\n};\nvar updateUserInfo = function updateUserInfo(name, status) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: status\n    })\n  }).then(getResponseData);\n};\nvar likes = function likes(method, id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: method,\n    headers: config.headers\n  }).then(getResponseData);\n};\nvar addCard = function addCard(name, link) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(getResponseData);\n};\nvar getUserInfo = function getUserInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(getResponseData);\n};\nvar uploadAvatarImage = function uploadAvatarImage(url) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: url\n    })\n  }).then(getResponseData);\n};\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(getResponseData);\n};\nvar deleteCard = function deleteCard(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(id), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(getResponseData);\n};\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n  }\n  return res.json();\n}\n;// CONCATENATED MODULE: ./src/pages/components/card.js\n\n\n\nfunction loadCards(result) {\n  cards.innerHTML = '';\n  result.forEach(function (card) {\n    var fetchedCard = Object.assign({}, card);\n    fetchedCard.myCard = card.owner._id === currentUser.userId;\n    var cardElement = createCard(fetchedCard);\n    cards.prepend(cardElement);\n  });\n}\nfunction createCard(card) {\n  var cardElement = cardTemplate.querySelector('.element').cloneNode(true);\n  var cardImage = cardElement.querySelector('.element__image');\n  var cardTitle = cardElement.querySelector('.element__title');\n  var cardLike = cardElement.querySelector('.element__button-like');\n  var cardTrash = cardElement.querySelector('.element__trash');\n  var cardLikeTitle = cardElement.querySelector('.element__like_title');\n  cardImage.src = card.link;\n  cardImage.alt = 'Картинка, изображающая ' + card.name;\n  cardTitle.textContent = card.name;\n  cardLikeTitle.textContent = card.likes.length;\n  cardLike.addEventListener('click', function () {\n    var toggled = cardLike.classList.contains('element__button-like-active') ? \"DELETE\" : \"PUT\";\n    likes(toggled, card._id).then(function (result) {\n      cardLikeTitle.textContent = result.likes.length;\n      cardLike.classList.toggle('element__button-like-active');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n  if (card.myCard) {\n    cardTrash.addEventListener('click', function () {\n      Object.assign(selectedElement, cardElement);\n      Object.assign(selectedCard, card);\n      openPopup(popupDelete);\n    });\n  } else {\n    cardTrash.classList.add('element__trash_hidden');\n  }\n  cardImage.addEventListener('click', function () {\n    openPopup(popupPreview);\n    popupImage.src = card.link;\n    popupImage.alt = \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \".concat(card.name, \" \\u0432 \\u043F\\u0440\\u0435\\u0432\\u044C\\u044E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\");\n    popupPreviewTitle.textContent = card.name;\n  });\n  return cardElement;\n}\n;// CONCATENATED MODULE: ./src/pages/components/validate.js\nvar input;\nvar buttonSelector;\nvar inputTypeError;\nvar inputTypeErrorActive;\nvar showInputError = function showInputError(formElement, inputElement, errorMessage) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(inputTypeError);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(inputTypeErrorActive);\n};\nvar hideInputError = function hideInputError(formElement, inputElement) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  if (inputElement.classList.contains(inputTypeError) || inputElement.classList.contains(inputTypeErrorActive)) {\n    inputElement.classList.remove(inputTypeError);\n    errorElement.classList.remove(inputTypeErrorActive);\n    errorElement.textContent = '';\n  }\n};\nvar checkInputValidity = function checkInputValidity(formElement, inputElement) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage);\n  } else {\n    hideInputError(formElement, inputElement);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement) {\n  var inputList = Array.from(formElement.querySelectorAll(input));\n  var buttonElement = formElement.querySelector(buttonSelector);\n  toggleButtonState(inputList, buttonElement);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(inputList, buttonElement);\n    });\n  });\n};\nvar enableValidation = function enableValidation(_ref) {\n  var formSelector = _ref.formSelector,\n    inputSelector = _ref.inputSelector,\n    submitButtonSelector = _ref.submitButtonSelector,\n    inputErrorClass = _ref.inputErrorClass,\n    errorClass = _ref.errorClass;\n  input = inputSelector;\n  buttonSelector = submitButtonSelector;\n  inputTypeError = inputErrorClass;\n  inputTypeErrorActive = errorClass;\n  var formList = Array.from(document.querySelectorAll(formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement);\n  });\n};\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, buttonElement) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.setAttribute('disabled', '');\n  } else {\n    buttonElement.removeAttribute('disabled');\n  }\n}\n;// CONCATENATED MODULE: ./src/pages/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nfunction loadEditValues() {\n  nameInput.value = profileName.textContent;\n  statusInput.value = profileStatus.textContent;\n}\nbuttonAdd.addEventListener('click', function () {\n  var submitButton = popupAdd.querySelector('.popup__button-save');\n  submitButton.setAttribute('disabled', '');\n  openPopup(popupAdd);\n});\nbuttonEdit.addEventListener('click', function () {\n  openPopup(popupEdit);\n  loadEditValues();\n});\nprofileAvatarContainer.addEventListener('click', function () {\n  var submitButton = popupAvatar.querySelector('.popup__button-save');\n  submitButton.setAttribute('disabled', '');\n  openPopup(popupAvatar);\n});\ncloseButtons.forEach(function (button) {\n  var popup = button.closest('.popup');\n  button.addEventListener('click', function () {\n    return closePopup(popup);\n  });\n});\noverlays.forEach(function (overlay) {\n  var popup = overlay.closest('.popup');\n  overlay.addEventListener('click', function () {\n    return closePopup(popup);\n  });\n});\npopupFormAdd.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormAddSubmit(e);\n});\npopupFormEdit.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormEditSubmit(e);\n});\npopupFormAvatar.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormAvatarSubmit(e);\n});\npopupFormDelete.addEventListener('submit', function (e) {\n  e.preventDefault();\n  handleFormDeleteSubmit();\n});\nenableValidation({\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button-save',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input_error_active'\n});\nfunction loadUserInfo(result) {\n  profileAvatar.src = result.avatar;\n  profileName.textContent = result.name;\n  profileStatus.textContent = result.about;\n  currentUser.userId = result._id;\n}\nPromise.all([getUserInfo(), getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    info = _ref2[0],\n    initialCards = _ref2[1];\n  currentUser.userId = info._id;\n  loadUserInfo(info);\n  loadCards(initialCards);\n}).catch(function (err) {\n  console.log(err);\n});\nfunction handleFormAvatarSubmit(evt) {\n  submitAvatarButton.textContent = \"Сохранение...\";\n  uploadAvatarImage(avatarInput.value).then(function (res) {\n    profileAvatar.src = res.avatar;\n    submitAvatarButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupAvatar);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nfunction handleFormDeleteSubmit() {\n  deleteCard(selectedCard._id).then(function () {\n    closePopup(popupDelete);\n    Object.assign(selectedCard, {});\n    Object.assign(selectedElement, {});\n  }).then(function () {\n    getInitialCards().then(function (res) {\n      return loadCards(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\nfunction handleFormEditSubmit(evt) {\n  profileName.textContent = nameInput.value;\n  profileStatus.textContent = statusInput.value;\n  submitEditButton.textContent = \"Сохранение...\";\n  updateUserInfo(nameInput.value, statusInput.value).then(function () {\n    submitEditButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupEdit);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\nfunction handleFormAddSubmit(evt) {\n  submitAddButton.textContent = \"Сохранение...\";\n  addCard(titleInput.value, linkInput.value).then(function (res) {\n    var fetchedCard = Object.assign({}, res);\n    fetchedCard.myCard = res.owner._id === currentUser.userId;\n    var cardElement = createCard(fetchedCard);\n    cards.prepend(cardElement);\n    submitAddButton.textContent = \"Сохранить\";\n    evt.target.reset();\n    closePopup(popupAdd);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///307\n")}},__webpack_exports__={};__webpack_modules__[307]()})();